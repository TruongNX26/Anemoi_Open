// <auto-generated />
using System;
using System.Collections.Generic;
using Anemoi.Workspace.Infrastructure.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Anemoi.Workspace.Infrastructure.Migrations
{
    [DbContext(typeof(WorkspaceDbContext))]
    partial class WorkspaceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Anemoi.Workspace.Domain.Models.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("boolean");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<Guid?>("WorkspaceId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("WorkspaceId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Anemoi.Workspace.Domain.Models.MemberInvitation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatorId")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<List<string>>("RoleGroupIds")
                        .HasColumnType("text[]");

                    b.Property<Guid?>("WorkspaceId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("WorkspaceId");

                    b.HasIndex("Email", "WorkspaceId")
                        .IsUnique();

                    b.ToTable("MemberInvitations");
                });

            modelBuilder.Entity("Anemoi.Workspace.Domain.Models.MemberInvitationMapOrganization", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MemberInvitationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("MemberInvitationId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("MemberInvitationMapOrganizations");
                });

            modelBuilder.Entity("Anemoi.Workspace.Domain.Models.MemberMapOrganization", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MemberId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("MemberMapOrganizations");
                });

            modelBuilder.Entity("Anemoi.Workspace.Domain.Models.MemberMapRoleGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MemberId")
                        .HasColumnType("uuid");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("RoleGroupId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberMapRoleGroups");
                });

            modelBuilder.Entity("Anemoi.Workspace.Domain.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("CoverPhotoPath")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CustomDomain")
                        .HasColumnType("text");

                    b.Property<string>("DistrictId")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("boolean");

                    b.Property<string>("LogoPath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Owner")
                        .HasColumnType("text");

                    b.Property<Guid?>("ParentOrganizationId")
                        .HasColumnType("uuid");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("ProvinceId")
                        .HasColumnType("text");

                    b.Property<string>("SearchHint")
                        .HasColumnType("text");

                    b.Property<string>("SubDomain")
                        .HasColumnType("text");

                    b.Property<string>("TaxCode")
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .HasColumnType("text");

                    b.Property<Guid?>("WorkspaceId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ParentOrganizationId");

                    b.HasIndex("SubDomain")
                        .IsUnique();

                    b.HasIndex("WorkspaceId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("Anemoi.Workspace.Domain.Models.Workspace", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("boolean");

                    b.Property<string>("LogoPath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("SearchHint")
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Workspaces");
                });

            modelBuilder.Entity("Anemoi.Workspace.Domain.Models.Member", b =>
                {
                    b.HasOne("Anemoi.Workspace.Domain.Models.Workspace", "Workspace")
                        .WithMany("Members")
                        .HasForeignKey("WorkspaceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("Anemoi.Workspace.Domain.Models.MemberInvitation", b =>
                {
                    b.HasOne("Anemoi.Workspace.Domain.Models.Workspace", "Workspace")
                        .WithMany("MemberInvitations")
                        .HasForeignKey("WorkspaceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("Anemoi.Workspace.Domain.Models.MemberInvitationMapOrganization", b =>
                {
                    b.HasOne("Anemoi.Workspace.Domain.Models.MemberInvitation", "MemberInvitation")
                        .WithMany("MemberInvitationMapOrganizations")
                        .HasForeignKey("MemberInvitationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Anemoi.Workspace.Domain.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("MemberInvitation");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Anemoi.Workspace.Domain.Models.MemberMapOrganization", b =>
                {
                    b.HasOne("Anemoi.Workspace.Domain.Models.Member", "Member")
                        .WithMany("MemberMapOrganizations")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Anemoi.Workspace.Domain.Models.Organization", "Organization")
                        .WithMany("MemberMapOrganizations")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Member");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Anemoi.Workspace.Domain.Models.MemberMapRoleGroup", b =>
                {
                    b.HasOne("Anemoi.Workspace.Domain.Models.Member", "Member")
                        .WithMany("MemberMapRoleGroups")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Anemoi.Workspace.Domain.Models.Organization", b =>
                {
                    b.HasOne("Anemoi.Workspace.Domain.Models.Organization", "ParentOrganization")
                        .WithMany("ChildOrganizations")
                        .HasForeignKey("ParentOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Anemoi.Workspace.Domain.Models.Workspace", "Workspace")
                        .WithMany("Organizations")
                        .HasForeignKey("WorkspaceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ParentOrganization");

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("Anemoi.Workspace.Domain.Models.Member", b =>
                {
                    b.Navigation("MemberMapOrganizations");

                    b.Navigation("MemberMapRoleGroups");
                });

            modelBuilder.Entity("Anemoi.Workspace.Domain.Models.MemberInvitation", b =>
                {
                    b.Navigation("MemberInvitationMapOrganizations");
                });

            modelBuilder.Entity("Anemoi.Workspace.Domain.Models.Organization", b =>
                {
                    b.Navigation("ChildOrganizations");

                    b.Navigation("MemberMapOrganizations");
                });

            modelBuilder.Entity("Anemoi.Workspace.Domain.Models.Workspace", b =>
                {
                    b.Navigation("MemberInvitations");

                    b.Navigation("Members");

                    b.Navigation("Organizations");
                });
#pragma warning restore 612, 618
        }
    }
}
